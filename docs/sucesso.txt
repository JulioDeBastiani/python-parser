STATEMENT_LIST SETA STATEMENT STATEMENT_LIST_E
STATEMENT_LIST_E SETA STATEMENT STATEMENT_LIST_E
STATEMENT_LIST_E SETA VAZIO
SCOPE SETA indent STATEMENT_LIST dedent
STATEMENT SETA FUNCTION_DEF eos
STATEMENT SETA FLOW_STATEMENT eos
STATEMENT SETA RETURN_STATEMENT eos
STATEMENT SETA EXPRESSION_STATEMENT eos
STATEMENT SETA FOR_STATEMENT eos
STATEMENT SETA WHILE_STATEMENT eos
STATEMENT SETA IF_STATEMENT eos
FUNCTION_DEF SETA def id ( ID_LIST ) : SCOPE
ID_LIST SETA id ID_LIST_D
ID_LIST_D SETA , id ID_LIST_D
ID_LIST_D SETA VAZIO
FLOW_STATEMENT SETA break
FLOW_STATEMENT SETA continue
RETURN_STATEMENT SETA return EXPRESSION_LIST
EXPRESSION_STATEMENT SETA id EXPRESSION_STATEMENT'
EXPRESSION_STATEMENT' SETA ( EXPRESSION_LIST )
EXPRESSION_STATEMENT' SETA ASSIGNMENT_EXPRESSION'
ID_OR_FCALL SETA id ID_OR_FCALL_D
ID_OR_FCALL_D SETA ( EXPRESSION_LIST )
ID_OR_FCALL_D SETA VAZIO
EXPRESSION_LIST SETA EXPRESSION EXPRESSION_LIST_d
EXPRESSION_LIST_d SETA , EXPRESSION EXPRESSION_LIST_d
EXPRESSION_LIST_d SETA VAZIO
ASSIGNMENT_EXPRESSION SETA id ASSIGNMENT_EXPRESSION'
ASSIGNMENT_EXPRESSION' SETA = EXPRESSION
ASSIGNMENT_EXPRESSION' SETA += EXPRESSION
ASSIGNMENT_EXPRESSION' SETA -= EXPRESSION
ASSIGNMENT_EXPRESSION' SETA *= EXPRESSION
ASSIGNMENT_EXPRESSION' SETA /= EXPRESSION
EXPRESSION SETA EXPRESSION_A EXPRESSION'
EXPRESSION' SETA and EXPRESSION
EXPRESSION' SETA or EXPRESSION
EXPRESSION' SETA VAZIO
EXPRESSION_A SETA EXPRESSION_B EXPRESSION_A'
EXPRESSION_A SETA not EXPRESSION_B
EXPRESSION_A' SETA == EXPRESSION_A
EXPRESSION_A' SETA != EXPRESSION_A
EXPRESSION_A' SETA < EXPRESSION_A
EXPRESSION_A' SETA <= EXPRESSION_A
EXPRESSION_A' SETA > EXPRESSION_A
EXPRESSION_A' SETA >= EXPRESSION_A
EXPRESSION_A' SETA VAZIO
EXPRESSION_B SETA EXPRESSION_C EXPRESSION_B'
EXPRESSION_B' SETA * EXPRESSION_B
EXPRESSION_B' SETA / EXPRESSION_B
EXPRESSION_B' SETA ^ EXPRESSION_B
EXPRESSION_B' SETA VAZIO
EXPRESSION_C SETA EXPRESSION_D EXPRESSION_C'
EXPRESSION_C' SETA + EXPRESSION_C
EXPRESSION_C' SETA - EXPRESSION_C
EXPRESSION_C' SETA VAZIO
EXPRESSION_D SETA ( EXPRESSION )
EXPRESSION_D SETA ID_OR_FCALL
EXPRESSION_D SETA int_literal
EXPRESSION_D SETA float_literal
EXPRESSION_D SETA string_literal
FOR_STATEMENT SETA for id in id : SCOPE
WHILE_STATEMENT SETA while EXPRESSION : SCOPE
IF_STATEMENT SETA if EXPRESSION : SCOPE ELSE_STATEMENT
ELSE_STATEMENT SETA else SCOPE
ELSE_STATEMENT SETA elif EXPRESSION : SCOPE ELSE_STATEMENT
ELSE_STATEMENT SETA VAZIO