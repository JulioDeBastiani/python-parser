STATEMENT_LIST -> (def, 1), (id, 1), (break, 1), (continue, 1), (return, 1), (for, 1), (while, 1), (if, 1)
STATEMENT -> (def, 5), (id, 8), (break, 6), (continue, 6), (return, 7), (for, 9), (while, 10), (if, 11), 
STATEMENT_LIST_E -> (dedent, 3), (def, 2), (id, 2), (break, 2), (continue, 2), (return, 2), (for, 2), (while, 2), (if, 2), ($, 3)
SCOPE -> (indent, 4)
FUNCTION_DEF -> (def, 12)
FLOW_STATEMENT -> (break, 16), (continue, 17)
RETURN_STATEMENT -> (return, 18)
EXPRESSION_STATEMENT -> (id, 19)
FOR_STATEMENT -> (for, 61)
WHILE_STATEMENT -> (while, 62)
IF_STATEMENT -> (if, 63_
ID_LIST -> (id, 13)
ID_LIST_D -> ((, 15), (,, 14)
EXPRESSION_LIST -> (id, 25), ((, 25), (not, 25), (int_literal, 25), (float_literal, 25), (string_literal, 25)
EXPRESSION_STATEMENT' -> ((, 20), (=, 21), (+=, 21), (-=, 21), (*=, 21), (=, 21)
ASSIGNMENT_EXPRESSION' -> (=, 29), (+=, 30), (-=, 31), (*=, 32), (=, 33)
ID_OR_FCALL_D -> (eos, 24), ((, 23), (), 24), (:, 24), (,, 24), (and, 24), (or, 24), (==, 24), (!=, 24), (<, 24), (<=, 24), (>, 24), (>=, 24), (*, 24), (/, 24), (^, 24), (+, 24), (-, 24)
ID_OR_FCALL -> (id, 22)
EXPRESSION -> (id, 34), ((, 34), (not, 34), (int_literal, 34), (float_literal, 34), (string_literal, 34)
EXPRESSION_LIST_d -> (eos, 27), (), 27), (,, 26)
ASSIGNMENT_EXPRESSION -> (id, 28)
EXPRESSION_A -> (id, 38), ((, 38), (not, 39), (int_literal, 38), (float_literal, 38), (string_literal, 38)
EXPRESSION' -> (eos, 37), (), 37), (:, 37), (,, 37), (and, 35), (or, 36), 
EXPRESSION_B -> (id, 47), ((, 47), (int_literal, 47), (float_literal, 47), (string_literal, 47)
EXPRESSION_A' -> (eos, 46), (), 46), (:, 46), (,, 46), (and, 46), (or, 46), (==, 40), (!=, 41), (<, 42), (<=, 43), (>, 44), (>=, 45)
EXPRESSION_C -> (id, 52), ((, 52), (int_literal, 52), (float_literal, 52), (string_literal, 52)
EXPRESSION_B' -> 
EXPRESSION_D -> (id, 57), ((, 56), (int_literal, 58), (float_literal, 59), (string_literal, 60)
EXPRESSION_C' -> (eos, 55), (), 55), (:, 55), (,, 55), (and, 55), (or, 55), (==, 55), (!=, 55), (<, 55), (<=, 55), (>, 55), (>=, 55), (*, 55), (/, 55), (^, 55), (+, 53), (-, 54)
ELSE_STATEMENT -> (eos, 66), (else, 64), (elif, 65)